# the graalpy version implies the below versions, so update these together
{% set version = "23.1.0" %}
{% set gp_python_version = "3.10.8" %}
{% set mx_version = "6.50.2" %}
{% set java_version = "21+35" %}
{% set jvmci_version = "23.1-b15" %}

{% if graalpy_distribution is not defined %}
{% set graalpy_distribution = "jvm" %}
{% endif %}

# Keep increasing the build_num until we get a new graalpy version. Do not reset
{% set build_num = "0" %}

{% set java_major = java_version.split("+")[0] %}
{% set python_maj_min = ".".join(gp_python_version.split(".")[:2]) %}
{% set graalpy_maj_min = ".".join(version.split(".")[:2]) %}
{% set graalpy_abi = "native" %}

package:
  name: graalpy
  version: {{ version }}

source:
  - url: https://github.com/graalvm/labs-openjdk-{{ java_major }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-linux-aarch64.tar.gz  # [build_platform == "linux-aarch64"]
    sha256: c68f3b88b32204058fda6e721b8a85dd2ddd0ecb75fdba165febb3e92e310e16  # [build_platform == "linux-aarch64"]
  - url: https://github.com/graalvm/labs-openjdk-{{ java_major }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-linux-amd64.tar.gz  # [build_platform == "linux-64"]
    sha256: 175e5308c88eb518c59b48a8bbc23ac01a2bd6b908472b0e9fb4b830bfffb6ee  # [build_platform == "linux-64"]
  - url: https://github.com/graalvm/labs-openjdk-{{ java_major }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-darwin-amd64.tar.gz  # [osx and x86_64]
    sha256: b20ec7e744c0703e7196efce58e4625f217edf28218530c93630ede9b458b6c7  # [osx and x86_64]
  - url: https://github.com/graalvm/labs-openjdk-{{ java_major }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-darwin-aarch64.tar.gz  # [osx and arm64]
    sha256: 5dcf8d842e88c75c50fe6a35bfa618efc74594f6dc33590a898c2a0bf516f0c5  # [osx and arm64]
  - url: https://github.com/graalvm/labs-openjdk-{{ java_major }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-windows-amd64.tar.gz  # [win64]
    sha256: 80fffa49bfa57e0db27e48a026f2bf3a80392bfd1080a16362dde58f6a868577  # [win64]
    folder: labsjdk
  - url: https://github.com/graalvm/mx/archive/refs/tags/{{ mx_version }}.zip
    sha256: 1b25d91e98e9f248430058cb5ec35c65cf2037f5f1bf3fac4b15b6d2effeef3a
    folder: mx
  - url: https://github.com/oracle/graal/archive/refs/tags/vm-{{ version }}.zip
    sha256: 61d82cb5e831ec78cad445bf86ae51e31b7762fc4d53ded0b818d0ae5697466e
    folder: graal
    patches:
      - patches/sulong-without-tck.patch
      - patches/graal-omit-libjli-loading.patch
  - url: https://github.com/oracle/graalpython/archive/refs/tags/vm-{{ version }}.zip
    sha256: b85170e2713b1501a4eac9d92b2eecaa9932475bc04fcc4437b9ab30834f588e
    folder: graalpython

build:
  number: {{ build_num }}

outputs:
  - name: graalpy
    version: {{ version }}
    script: build_graalpy.sh
    build:
      skip_compile_pyc:
        - '*.py'
      number: {{ build_num }}
      string: {{ build_num }}_{{ graalpy_distribution }}_{{ graalpy_abi }}
      script_env:
        - GRAALPY_DISTRIBUTION=PYTHON_JAVA_STANDALONE_SVM_JAVA{{ java_major }}  # [graalpy_distribution == "jvm"]
        - GRAALPY_DISTRIBUTION=PYTHON_NATIVE_STANDALONE_SVM_JAVA{{ java_major }}  # [graalpy_distribution == "native"]
        - GRAALPY_DISTRIBUTION_TYPE={{ graalpy_distribution }}
        - PY_VERSION={{ python_maj_min }}
        - MACOS=true  # [osx]
      run_exports:
        weak:
          - graalpy >={{ version }}
        noarch:
          - {{ pin_subpackage("python", max_pin="x.x", min_pin="x.x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - pypy3.9 >=7.3.9
        - make
        - patch
        - zlib
        - git
        - curl
        - cmake
        - patchelf  # [linux]
      host:
        - zlib
      run:
        - libzlib
        - patch
        - curl
        - __osx >={{ MACOS_DEPLOYMENT_TARGET|default("10.12") }}  # [osx]
        - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}
      run_constrained:
        - python {{ gp_python_version }} {{ build_num }}_{{ graalpy_abi }}{{ graalpy_maj_min.replace('.', '') }}_graalpy
    test:
      commands:
        - python3 --help
        - python3 -c "import platform; print(platform._sys_version())"
        - graalpy -m venv --help
        - graalpy -m venv testvenv
        - testvenv/bin/graalpy -c "import _struct; print(_struct.pack('I', 15663050))"

  - name: python
    version: {{ gp_python_version }}
    build:
      number: {{ build_num }}
      string: {{ build_num }}_{{ graalpy_abi }}{{ graalpy_maj_min.replace('.', '') }}_graalpy
      track_features:
        - graalpy
      run_exports:
        weak:
          - {{ pin_subpackage("graalpy", max_pin="x.x", min_pin="x.x") }}
          - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}
        noarch:
          - {{ pin_subpackage("python", max_pin="x.x", min_pin="x.x") }}
    requirements:
      host:
        - {{ pin_subpackage("graalpy", max_pin="x.x.x", min_pin="x.x.x") }}
      run:
        - {{ pin_subpackage("graalpy", max_pin="x.x.x", min_pin="x.x.x") }}
        - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}
    test:
      requires:
        - setuptools
        - pip
      imports:
        # check that noarch packages work
        - setuptools
      commands:
        - python --version
        - pip -h
        - test $(python -c "import sys; print('.'.join(str(i) for i in sys.version_info[:3]))") == "{{ gp_python_version }}"  # [unix]
        - test $(python -c "import sys; print(sys.implementation.name)") == "graalpy"  # [unix]

about:
  home: http://graalvm.org/python
  license: UPL-1.0
  license_file: LICENSE_GRAALPY.txt
  summary: >
    GraalPy is a high-performance Python implementation on GraalVM. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp in commands.

extra:
  recipe-maintainers:
    - timfel
    - msimacek
    - isuruf
